"Custom_Reports_Filename","string","NA","NA","UNINITIALIZED STRING","The name of the file containing custom report configuration parameters. Omitting this parameter or setting it to RunAllCustomReports will load all reporters found that are valid for the given simulation type. The file must be in JSON format.",".. code-block:: json

    {  
        ""Custom_Reports_Filename"": ""custom_reports.json""
    }"
"Cycle_Arrhenius_1","float","0","1.00E+15","4.09E+10","The Arrhenius equation, :math:`a_1^{-a_2/T}`, with T in degrees Kelvin, parameterizes the mosquito feeding cycle rate. This duration is a decreasing function of temperature.  The variable a1 is a temperature-independent scale factor on feeding rate. **Temperature_Dependent_Feeding_Cycle** must be set to ARRHENIUS_DEPENDENCE.",".. code-block:: json

    {
        ""Temperature_Dependent_Feeding_Cycle"": ""ARRHENIUS_DEPENDENCE"",
        ""Vector_Species_Params"": {
            ""arabiensis"": {
                ""Cycle_Arrhenius_1"": 99,
                ""Cycle_Arrhenius_2"": 88
            }
        }
    }"
"Cycle_Arrhenius_2","float","0","1.00E+15","7740","The Arrhenius equation, :math:`a_1^{-a_2/T}`, with T in degrees Kelvin, parameterizes the mosquito feeding cycle rate. This duration is a decreasing function of temperature.  The variable a2 is a temperature-independent scale factor on feeding rate. **Temperature_Dependent_Feeding_Cycle** must be set to ARRHENIUS_DEPENDENCE.",".. code-block:: json

    {
        ""Temperature_Dependent_Feeding_Cycle"": ""ARRHENIUS_DEPENDENCE"",
        ""Vector_Species_Params"": {
            ""arabiensis"": {
                ""Cycle_Arrhenius_1"": 99,
                ""Cycle_Arrhenius_2"": 88
            }
        }
    }"
"Cycle_Arrhenius_Reduction_Factor","float","0","1","1","The scale factor applied to cycle duration (from oviposition to oviposition) to reduce the duration when primary follicles are at stage II rather than I in the case of newly emerged females. **Temperature_Dependent_Feeding_Cycle** must be set to ARRHENIUS_DEPENDENCE.",".. code-block:: json

    {
        ""Temperature_Dependent_Feeding_Cycle"": ""ARRHENIUS_DEPENDENCE"",
        ""Vector_Species_Params"": {
            ""funestus"": {
                ""Cycle_Arrhenius_Reduction_Factor"": 0.44
            }
        }
    }"
"Drought_Egg_Hatch_Delay","float","0","1","0.33","Proportion of regular egg hatching that still occurs when habitat dries up. **Enable_Drought_Egg_Hatch_Delay** must be set to 1.",".. code-block:: json

    { 
        ""Enable_Drought_Egg_Hatch_Delay"": 1,
        ""Drought_Egg_Hatch_Delay"": 0.33
    }"
"Egg_Arrhenius1","float","0","1.00E+10","6.16E+07","The Arrhenius equation, math:`a_1^{-a_2/T}`, with T in degrees Kelvin, parameterizes the daily rate of mosquito egg hatching. This duration is a decreasing function of temperature.  The variable a1 is a temperature-independent scale factor on hatching rate. **Enable_Temperature_Dependent_Egg_Hatching** must be set to 1.",".. code-block:: json

    {
        ""Enable_Temperature_Dependent_Egg_Hatching"": 1,     
        ""Egg_Arrhenius1"": 61599956,
        ""Egg_Arrhenius2"": 5754
    }"
"Egg_Arrhenius2","float","0","1.00E+10","5754.03","The Arrhenius equation, :math:`a_1^{-a_2/T}`, with T in degrees Kelvin, parameterizes the daily rate of mosquito egg hatching. This duration is a decreasing function of temperature.  The variable a2 is a temperature-dependent scale factor on hatching rate. **Enable_Temperature_Dependent_Egg_Hatching** must be set to 1.",".. code-block:: json

    {
        ""Enable_Temperature_Dependent_Egg_Hatching"": 1,     
        ""Egg_Arrhenius1"": 61599956,
        ""Egg_Arrhenius2"": 5754
    }"
"Egg_Hatch_Density_Dependence","enum","NA","NA","NO_DENSITY_DEPENDENCE","The effect of larval density on egg hatching rate. Possible values are: 

DENSITY_DEPENDENCE 
   Egg hatching is reduced when the habitat is nearing its carrying capacity.
NO_DENSITY_DEPENDENCE
   Egg hatching is not dependent upon larval density.",".. code-block:: json

    {
        ""Egg_Hatch_Density_Dependence"": ""NO_DENSITY_DEPENDENCE""
    }"
"Enable_Drought_Egg_Hatch_Delay","boolean","0","1","0","Controls whether or not eggs hatch at delayed rates, set by **Drought_Egg_Hatch_Delay**, when the habitat dries up completely.",".. code-block:: json

    {
        ""Enable_Drought_Egg_Hatch_Delay"": 1, 
        ""Drought_Egg_Hatch_Delay"": 0.33
    }"
"Enable_Egg_Mortality","boolean","0","1","0","Controls whether or not to include a daily mortality rate on the egg population, which is independent of climatic factors. ",".. code-block:: json

    {
        ""Enable_Egg_Mortality"": 1,
    }"
"Enable_Temperature_Dependent_Egg_Hatching","boolean","0","1","0","Controls whether or not temperature has an effect on egg hatching, defined by **Egg_Arrhenius_1** and **Egg_Arrhenius_2**.",".. code-block:: json

    {  
        ""Enable_Temperature_Dependent_Egg_Hatching"": 1,  
        ""Egg_Arrhenius1"": 61599956.864, 
        ""Egg_Arrhenius2"": 5754.033
    }"
"Enable_Vector_Aging","boolean","0","1","0","Controls whether or not vectors undergo senescence as they age. ",".. code-block:: json

    {
        ""Enable_Vector_Aging"": 1
    }"
"Incubation_Period_Log_Mean","float","0","3.40E+38","6","The mean of log normal for the incubation period distribution. **Incubation_Period_Distribution** must be set to LOG_NORMAL_DURATION.",".. code-block:: json

    {
        ""Incubation_Period_Distribution"": ""LOG_NORMAL_DURATION"",
        ""Incubation_Period_Log_Mean"": 5.758,
        ""Incubation_Period_Log_Width"": 0.27
    }"
"Incubation_Period_Log_Width","float","0","3.40E+38","1","The log width of log normal for the incubation period distribution. **Incubation_Period_Distribution** must be set to LOG_NORMAL_DURATION.",".. code-block:: json

    {
        ""Incubation_Period_Distribution"": ""LOG_NORMAL_DURATION"",
        ""Incubation_Period_Log_Mean"": 5.758,
        ""Incubation_Period_Log_Width"": 0.27
    }"
"Infectivity_Exponential_Baseline","float","0","1","0","The scale factor applied to **Base_Infectivity** at the beginning of a simulation, before the infectivity begins to grow exponentially. **Infectivity_Scale_Type** must be set to EXPONENTIAL_FUNCTION_OF_TIME.",".. code-block:: json

    {
        ""Infectivity_Exponential_Baseline"": 0.1, 
        ""Infectivity_Exponential_Delay"": 90, 
        ""Infectivity_Exponential_Rate"": 45, 
        ""Infectivity_Scale_Type"": ""EXPONENTIAL_FUNCTION_OF_TIME""
    }"
"Infectivity_Exponential_Delay","float","0","3.40E+38","0","The number of days before infectivity begins to ramp up exponentially. **Infectivity_Scale_Type** must be set to EXPONENTIAL_FUNCTION_OF_TIME.",".. code-block:: json

    {
        ""Infectivity_Exponential_Baseline"": 0.1, 
        ""Infectivity_Exponential_Delay"": 90, 
        ""Infectivity_Exponential_Rate"": 45, 
        ""Infectivity_Scale_Type"": ""EXPONENTIAL_FUNCTION_OF_TIME""
    }"
"Infectivity_Exponential_Rate","float","0","3.40E+38","0","The daily rate of exponential growth to approach to full infectivity after the delay set by **Infectivity_Exponential_Delay** has passed. **Infectivity_Scale_Type** must be set to EXPONENTIAL_FUNCTION_OF_TIME.",".. code-block:: json

    {
        ""Infectivity_Exponential_Rate"": 45
    }"
"Memory_Usage_Halting_Threshold_Working_Set_MB","integer","0","1.00E+06","8000","The maximum size (in MB) of working set memory before the system throws an exception and halts. ",".. code-block:: json

    {
        ""Memory_Usage_Halting_Threshold_Working_Set_MB"": 4000
    }"
"Memory_Usage_Warning_Threshold_Working_Set_MB","integer","0","1.00E+06","7000","The maximum size (in MB) of working set memory before memory usage statistics are written to the log regardless of log level.",".. code-block:: json

    {
        ""Memory_Usage_Warning_Threshold_Working_Set_MB"": 3500
    }"
"Nighttime_Feeding_Fraction","float","0","1","1","The fraction of feeds on humans (for a specific mosquito species) that occur during the nighttime. Thus the fraction of feeds on humans that occur during the day equals 1 - (value of this parameter).",".. code-block:: json

    {
        ""Vector_Species_Params"": {
            ""arabiensis"": {
                ""Acquire_Modifier"": 0.2, 
                ""Adult_Life_Expectancy"": 10, 
                ""Anthropophily"": 0.95, 
                ""Aquatic_Arrhenius_1"": 84200000000, 
                ""Aquatic_Arrhenius_2"": 8328, 
                ""Aquatic_Mortality_Rate"": 0.1, 
                ""Cycle_Arrhenius_1"": 0, 
                ""Cycle_Arrhenius_2"": 0, 
                ""Cycle_Arrhenius_Reduction_Factor"": 0, 
                ""Days_Between_Feeds"": 3, 
                ""Egg_Batch_Size"": 100, 
                ""Immature_Duration"": 4, 
                ""Indoor_Feeding_Fraction"": 0.5, 
                ""Infected_Arrhenius_1"": 117000000000, 
                ""Infected_Arrhenius_2"": 8336, 
                ""Infected_Egg_Batch_Factor"": 0.8, 
                ""Infectious_Human_Feed_Mortality_Factor"": 1.5, 
                ""Larval_Habitat_Types"": {
                    ""TEMPORARY_RAINFALL"": 11250000000
                }, 
                ""Nighttime_Feeding_Fraction"": 1, 
                ""Transmission_Rate"": 0.5
            }
        }
    }   "
"Serialization_Time_Steps","array of integers","0","2.15E+09",,"The list of time steps after which to save the serialized state. 0 (zero) indicates the initial state before simulation, n indicates after the nth time step. By default, no serialized state is saved.",".. code-block:: json

    {
        ""Serialization_Time_Steps"": [
            0, 
            10
        ]
    }"
"Serialized_Population_Filenames","array of strings","NA","NA","NA","Array of filenames with serialized population data. The number of filenames must match the number of cores used for the simulation. The file must be in .dtk format.",".. code-block:: json

    {
        ""Serialized_Population_Filenames"": [
            ""state-00010.dtk""
        ]
    }
	"
"Serialized_Population_Path","string ","NA","NA",".","The root path for the serialized population files.",".. code-block:: json

    {
        ""Serialized_Population_Path"": ""../00_Generic_Version_1_save/output""
    }
	"
"Temperature_Dependent_Feeding_Cycle","enum","NA","NA","NO_TEMPERATURE_DEPENDENCE","The effect of temperature on the duration between blood feeds. 
Possible values are: 

NO_TEMPERATURE_DEPENDENCE 
    No relation to temperature; days between feeds will be constant and specified by **Days_Between_Feeds** for each species.
ARRHENIUS_DEPENDENCE
    Use the Arrhenius equation with parameters **Cycle_Arrhenius_1** and **Cycle_Arrhenius_2**. 
BOUNDED_DEPENDENCE
    Use an equation bounded at 10 days at 15C and use **Days_Between_Feeds** to set the duration at 30C. ",".. code-block:: json

    {
        ""Temperature_Dependent_Feeding_Cycle"": ""BOUNDED_DEPENDENCE""
    }"
